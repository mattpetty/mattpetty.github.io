<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Packets &amp; Python: Matt&#39;s Networking Blog</title>
    <link>https://mattpetty.github.io/</link>
    <description>Recent content on Packets &amp; Python: Matt&#39;s Networking Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 03 May 2023 21:18:05 -0400</lastBuildDate><atom:link href="https://mattpetty.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Quick Note About Cisco AnyConnect Split-Tunnel Access Lists</title>
      <link>https://mattpetty.github.io/2023/05/03/a-quick-note-about-cisco-anyconnect-split-tunnel-access-lists/</link>
      <pubDate>Wed, 03 May 2023 21:18:05 -0400</pubDate>
      
      <guid>https://mattpetty.github.io/2023/05/03/a-quick-note-about-cisco-anyconnect-split-tunnel-access-lists/</guid>
      <description>Just a quick note when configuring access-lists for the split-tunneling feature of Cisco AnyConnect VPN Client. In order for the feature to actually work, the ACL must be Standard, not Extended.
When configuring split-tunneling, you are given the choices of Tunnel All, Tunnel Network List, and Exclude Network List. The latter two options require specifying an ACL for what to tunnel or exclude.
If you mistakenly use an extended access-list here, the AnyConnect VPN Client will revert to Tunnel All mode, even if you&amp;rsquo;ve chosen the Tunnel (or Exclude) Network List option.</description>
    </item>
    
    <item>
      <title>Let&#39;s Encrypt SSL Certificates for Proxmox VE Using Linode DNS</title>
      <link>https://mattpetty.github.io/2022/12/18/lets-encrypt-ssl-certificates-for-proxmox-ve-using-linode-dns/</link>
      <pubDate>Sun, 18 Dec 2022 23:42:00 -0500</pubDate>
      
      <guid>https://mattpetty.github.io/2022/12/18/lets-encrypt-ssl-certificates-for-proxmox-ve-using-linode-dns/</guid>
      <description>If you&amp;rsquo;re a fan of Proxmox Virtualization Environment (PVE) like I am, you&amp;rsquo;ll also likely be a fan of the fact that your Proxmox VE server(s) can utilize a free service called Let&amp;rsquo;s Encrypt to acquire a valid SSL certificate.
Let&amp;rsquo;s Encrypt works by first making you verify ownership of a domain or server, typically using either an HTTP connection to the server, or through a specific DNS record lookup. Once you&amp;rsquo;ve proven ownership, a certificate is automatically generated and downloaded (and optionally auto-installed on the server) to provide a &amp;ldquo;valid&amp;rdquo; TLS connection between your web browser and the server.</description>
    </item>
    
    <item>
      <title>NAT Control on the Cisco ASA</title>
      <link>https://mattpetty.github.io/2022/11/07/nat-control-on-the-cisco-asa/</link>
      <pubDate>Mon, 07 Nov 2022 13:46:18 -0500</pubDate>
      
      <guid>https://mattpetty.github.io/2022/11/07/nat-control-on-the-cisco-asa/</guid>
      <description>Introduction The history of NAT (network address translation) behaviors on Cisco&amp;rsquo;s ASA firewalls has certainly&amp;hellip; evolved over the years. In a future blog post, I&amp;rsquo;ll be covering the basics of specific NAT types and how they&amp;rsquo;ve changed over different code versions, but today I want to take a quick overview of default NAT behavior on Cisco‚Äôs firewalls and its evolution.
NAT Control Enter NAT Control, which over the course of its lifespan went from being a required default, to an optional feature, to ultimately being retired and disabled altogether.</description>
    </item>
    
    <item>
      <title>Python&#39;s ipaddress Module</title>
      <link>https://mattpetty.github.io/2022/08/09/pythons-ipaddress-module/</link>
      <pubDate>Tue, 09 Aug 2022 22:30:30 -0400</pubDate>
      
      <guid>https://mattpetty.github.io/2022/08/09/pythons-ipaddress-module/</guid>
      <description>Introduction üìù (Note: some familiarity with Python is assumed for this article)
Since version 3.3 (released September 2012), Python has included an ipaddress module as part of its standard library (that is, it&amp;rsquo;s included as part of any default Python 3.3+ installation). For a network engineer, this can be a remarkably useful and easy way to work with IP addresses and subnets in Python.
The official documentation is here, but read on for a basic summary of this module and some helpful uses for it.</description>
    </item>
    
    <item>
      <title>Beginner Python Examples for Network Engineers: Part 1</title>
      <link>https://mattpetty.github.io/2022/07/16/beginner-python-examples-for-network-engineers-part-1/</link>
      <pubDate>Sat, 16 Jul 2022 22:30:12 -0400</pubDate>
      
      <guid>https://mattpetty.github.io/2022/07/16/beginner-python-examples-for-network-engineers-part-1/</guid>
      <description>Introduction For anyone new to Python, or looking for a quick refresher on the basics, consider this article an overview of various ways to get started reading, modifying, and working with data in Python. Naturally, given the nature of this blog, this post will take a Network Engineering-centric approach in the examples.
Examples For these first two examples, let&amp;rsquo;s imagine some data, such as a list of MAC addresses. In Python, a group of items is called a List (there are also multiple other groupings in Python, but that&amp;rsquo;s a subject for another blog post).</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://mattpetty.github.io/about/</link>
      <pubDate>Tue, 21 Jun 2022 20:45:03 -0400</pubDate>
      
      <guid>https://mattpetty.github.io/about/</guid>
      <description>Hi! I&amp;rsquo;m Matt Petty, a network engineer in Knoxville, TN, with over 15 years of experience in healthcare IT.
My IT career started with help desk and desktop support, but quickly shifted to network engineering, and for the last 10+ years, has focused mainly on network security and services. My primary experience is in the Cisco ecosystem, particulary the Cisco ASA and Sourcefire Firepower Secure Firewall, and many other Cisco acronym soups (AnyConnect, ISE, IOS, NX-OS, WLC, even a little DNA and ACI).</description>
    </item>
    
  </channel>
</rss>
